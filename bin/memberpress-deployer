#!/usr/bin/env php
<?php

require_once __DIR__ . '/../vendor/autoload.php';

\WorDBless\Load::load();

echo 'MemberPress Deployer', PHP_EOL;

$archives_dir     = __DIR__ . '/../archives';
$plugins_dir      = __DIR__ . '/../plugins';
$repositories_dir = __DIR__ . '/../repositories';

$directories = array(
	$archives_dir,
	$plugins_dir,
	$repositories_dir,
);

foreach ( $directories as $directory ) {
	if ( ! is_dir( $directory ) ) {
		$result = \mkdir( $directory );

		if ( false === $result ) {
			\printf(
				'Unable to create directory: %s.',
				$directory
			);

			exit( 1 );
		}
	}
}

$memberpress_license_key    = \getenv( 'MEMBERPRESS_LICENSE_KEY' );
$memberpress_license_domain = \getenv( 'MEMBERPRESS_LICENSE_DOMAIN' );

if ( empty( $memberpress_license_key ) ) {
	echo 'MemberPress license key not defined in `MEMBERPRESS_LICENSE_KEY` environment variable.';

	exit( 1 );
}

if ( empty( $memberpress_license_domain ) ) {
	echo 'MemberPress license key not defined in `MEMBERPRESS_LICENSE_DOMAIN` environment variable.';

	exit( 1 );
}

/**
 * Display info.
 */
\printf(
	'MemberPress License Key: %s',
	$memberpress_license_key
);

echo PHP_EOL;

\printf(
	'MemberPress License Domain: %s',
	$memberpress_license_domain
);

echo PHP_EOL;

/**
 * Request info.
 */
$url = \sprintf(
	'https://mothership.caseproof.com/versions/info/%s',
	$memberpress_license_key
);

$response = Pronamic\WordPress\Http\Facades\Http::post( $url, array(
	'body' => array(
		'domain' => $memberpress_license_domain,
	)
) );

$result = $response->json();

\printf(
	'MemberPress Version: %s',
	$result->version
);

$memberpress_version = $result->version;

echo PHP_EOL;

\printf(
	'MemberPress ZIP URL: %s',
	$result->url
);

echo PHP_EOL;

/**
 * GitHub CLI.
 * 
 * @link https://github.blog/2021-03-11-scripting-with-github-cli/
 */
\system( 'gh auth status' );

/**
 * Git.
 */
$git_repository = 'wp-premium/memberpress';

$git_dir = $repositories_dir . '/memberpress';

\printf(
	'Git directory: %s',
	$git_dir
);

echo PHP_EOL;

$clone_command = \sprintf(
	'gh repo clone %s %s',
	\escapeshellarg( $git_repository ),
	\escapeshellarg( $git_dir )
);

\system( $clone_command );

/**
 * Download ZIP.
 */
$zip_file = $archives_dir . '/memberpress-' . $result->version . '.zip';

$curl_download_command = \sprintf(
	'curl %s --output %s',
	\escapeshellarg( $result->url ),
	$zip_file
);

echo $curl_download_command, PHP_EOL;

\system( $curl_download_command );

/**
 * Plugin directory.
 */
$plugin_dir  = $plugins_dir . '/memberpress';

$rm_plugin_command = \sprintf(
	'rm -f -R %s',
	\escapeshellarg( $plugin_dir )
);

\system( $rm_plugin_command );

/**
 * Unzip.
 */
$unzip_command = \sprintf(
	'unzip %s -d %s',
	\escapeshellarg( $zip_file ),
	\escapeshellarg( $plugins_dir )
);

echo $unzip_command, PHP_EOL;

\system( $unzip_command );

/**
 * Synchronize.
 * 
 * @link http://stackoverflow.com/a/14789400
 * @link http://askubuntu.com/a/476048
 */
$rsync_command = \sprintf(
	'rsync --archive --delete-before --exclude=%s --verbose %s %s',
	\escapeshellarg( '.git' ),
	\escapeshellarg( $plugin_dir . '/' ),
	\escapeshellarg( $git_dir . '/' )
);

echo $rsync_command, PHP_EOL;

\system( $rsync_command );

/**
 * Plugin `composer.json`.
 */
$composer_object = (object) array(
	'name' => 'wp-premium/memberpress',
	'autoload' => (object) array(
		'classmap' => array(
			'app/',
		),
	),
);

$composer_string = \wp_json_encode( $composer_object, \JSON_PRETTY_PRINT | \JSON_UNESCAPED_SLASHES );

$composer_file = $git_dir . '/composer.json';

\printf(
	'MemberPress `composer.json`: %s',
	$composer_string
);

$result = \file_put_contents( $composer_file, $composer_string );

if ( false === $result ) {
	\printf(
		'Unable to write: %s',
		$composer_file
	);

	exit( 1 );
}

echo PHP_EOL;

/**
 * Git user.
 * 
 * @link https://github.com/roots/wordpress/blob/13ba8c17c80f5c832f29cf4c2960b11489949d5f/bin/update-repo.php#L62-L67
 */
$git_user_email_command = \sprintf(
	'git config --global user.email %s',
	\escapeshellarg( 'info@memberpress.com' )
);

echo $git_user_email_command, PHP_EOL;

// \system( $git_user_email_command );

echo PHP_EOL;

$git_user_name_command = \sprintf(
	'git config --global user.name %s',
	\escapeshellarg( 'MemberPress' )
);

echo $git_user_name_command, PHP_EOL;

// \system( $git_user_name_command );

echo PHP_EOL;

/**
 * Git commit.
 * 
 * @link https://git-scm.com/docs/git-commit
 */
\chdir( $git_dir );

$git_add_command = 'git add --all';

echo $git_add_command, PHP_EOL;

\system( $git_add_command );

echo PHP_EOL;

$git_commit_message = \sprintf(
	'Updates to %s',
	$memberpress_version
);

$git_commit_command = \sprintf(
	'git commit --all -m %s',
	\escapeshellarg( $git_commit_message )
);

echo $git_commit_command, PHP_EOL;

\system( $git_commit_command );

echo PHP_EOL;

$git_push_command = 'git push origin main';

echo $git_push_command, PHP_EOL;

\system( $git_push_command );

echo PHP_EOL;

/**
 * GitHub release.
 * 
 * @link https://cli.github.com/manual/gh_release_create
 */
$gh_release_command = \sprintf(
	'gh release create %s %s',
	$memberpress_version,
	$zip_file
);

echo $gh_release_command, PHP_EOL;

\system( $gh_release_command );

echo PHP_EOL;
