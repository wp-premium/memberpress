#!/usr/bin/env php
<?php

function line( $text = '' ) {
	echo $text, PHP_EOL;
}

function run( $command, &$result_code = null ) {
	line( $command );

	$last_line = system( $command, $result_code );

	line();

	return $last_line;
}

line( 'MemberPress Deployer' );

$archives_dir     = __DIR__ . '/../archives';
$plugins_dir      = __DIR__ . '/../plugins';
$repositories_dir = __DIR__ . '/../repositories';

$directories = array(
	$archives_dir,
	$plugins_dir,
	$repositories_dir,
);

foreach ( $directories as $directory ) {
	if ( ! is_dir( $directory ) ) {
		$result = mkdir( $directory );

		if ( false === $result ) {
			printf(
				'Unable to create directory: %s.',
				$directory
			);

			exit( 1 );
		}
	}
}

$memberpress_license_key    = getenv( 'MEMBERPRESS_LICENSE_KEY' );
$memberpress_license_domain = getenv( 'MEMBERPRESS_LICENSE_DOMAIN' );

if ( empty( $memberpress_license_key ) ) {
	echo 'MemberPress license key not defined in `MEMBERPRESS_LICENSE_KEY` environment variable.';

	exit( 1 );
}

if ( empty( $memberpress_license_domain ) ) {
	echo 'MemberPress license key not defined in `MEMBERPRESS_LICENSE_DOMAIN` environment variable.';

	exit( 1 );
}

/**
 * Display info.
 */
line( '::group::MemberPress' );

line(
	sprintf(
		'MemberPress License Key: %s',
		$memberpress_license_key
	)
);

line(
	sprintf(
		'MemberPress License Domain: %s',
		$memberpress_license_domain
	)
);

/**
 * Request info.
 */
$url = sprintf(
	'https://mothership.caseproof.com/versions/info/%s',
	$memberpress_license_key
);

$data = run(
	sprintf(
		'curl --data %s --request POST %s',
		escapeshellarg( 'domain=' . $memberpress_license_domain ),
		escapeshellarg( $url )
	)
);

$result = json_decode( $data );

if ( ! is_object( $result ) ) {
	throw new Exception(
		sprintf(
			'Unknow response from: %s.',
			$url 
		)
	);

	exit( 1 );
}

$memberpress_version = $result->version;

line(
	sprintf(
		'MemberPress Version: %s',
		$memberpress_version
	)
);

line(
	sprintf(
		'MemberPress ZIP URL: %s',
		$result->url
	)
);

line( '::endgroup::' );

/**
 * GitHub CLI.
 * 
 * @link https://github.blog/2021-03-11-scripting-with-github-cli/
 */
run( 'gh auth status' );

/**
 * Git.
 */
$git_repository = 'wp-premium/memberpress';

$git_dir = $repositories_dir . '/memberpress';

line(
	sprintf(
		'Git directory: %s',
		$git_dir
	)
);

if ( ! is_dir( $git_dir ) ) {
	run(
		sprintf(
			'gh repo clone %s %s -- --branch=main',
			escapeshellarg( $git_repository ),
			escapeshellarg( $git_dir )
		)
	);
}

/**
 * Download ZIP.
 */
line( '::group::Download MemberPress' );

$zip_file = $archives_dir . '/memberpress-' . $result->version . '.zip';

run(
	sprintf(
		'curl %s --output %s',
		escapeshellarg( $result->url ),
		$zip_file
	)
);

line( '::endgroup::' );

/**
 * Plugin directory.
 */
$plugin_dir  = $plugins_dir . '/memberpress';

run(
	sprintf(
		'rm -f -R %s',
		escapeshellarg( $plugin_dir )
	)
);

/**
 * Unzip.
 */
line( '::group::Unzip MemberPress' );

run(
	sprintf(
		'unzip %s -d %s',
		escapeshellarg( $zip_file ),
		escapeshellarg( $plugins_dir )
	)
);

line( '::endgroup::' );

/**
 * Synchronize.
 * 
 * @link http://stackoverflow.com/a/14789400
 * @link http://askubuntu.com/a/476048
 */
line( '::group::Synchronize MemberPress' );

run(
	sprintf(
		'rsync --archive --delete-before --exclude=%s --verbose %s %s',
		escapeshellarg( '.git' ),
		escapeshellarg( $plugin_dir . '/' ),
		escapeshellarg( $git_dir . '/' )
	)
);

line( '::endgroup::' );

/**
 * Plugin `composer.json`.
 */
$result = copy( __DIR__ . '/../memberpress-composer.json', $git_dir . '/composer.json' );

if ( false === $result ) {
	echo 'Unable to copy `composer.json`.';

	exit( 1 );
}

/**
 * Git user.
 * 
 * @link https://github.com/roots/wordpress/blob/13ba8c17c80f5c832f29cf4c2960b11489949d5f/bin/update-repo.php#L62-L67
 */
run(
	sprintf(
		'git config --global user.email %s',
		escapeshellarg( 'info@memberpress.com' )
	)
);

run(
	sprintf(
		'git config --global user.name %s',
		escapeshellarg( 'MemberPress' )
	)
);

/**
 * Git commit.
 * 
 * @link https://git-scm.com/docs/git-commit
 */
chdir( $git_dir );

run( 'git add --all' );

run(
	sprintf(
		'git commit --all -m %s',
		escapeshellarg(
			sprintf(
				'Updates to %s',
				$memberpress_version
			)
		)
	)
);

run( 'gh auth status' );

run( 'git push origin main' );

/**
 * GitHub release view.
 */
run(
	sprintf(
		'gh release view %s',
		$memberpress_version
	),
	$result_code
);

$release_not_found = ( 1 === $result_code );

/**
 * GitHub release.
 * 
 * @todo https://memberpress.com/wp-json/wp/v2/pages?slug=change-log
 * @link https://cli.github.com/manual/gh_release_create
 */
if ( $release_not_found ) {
	run(
		sprintf(
			'gh release create %s %s',
			$memberpress_version,
			$zip_file
		)
	);
}
